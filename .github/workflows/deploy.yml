name: Deploy web application

on:
    push:
        branches:
            - main

jobs:
    deploy:
        runs-on: ubuntu-latest
        timeout-minutes: 15

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: 22
                  cache: 'npm'

            - name: Install dependencies
              run: npm ci

            - name: Create environment file
              run: |
                  echo "GITHUB_TOKEN=${{ secrets.GH_GRAPHQL_TOKEN }}" > .env

            - name: Build the application
              run: npm run build

            - name: Prepare SSH environment
              env:
                SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
                SSH_HOST: ${{ secrets.SSH_HOST }}
                SSH_PORT: ${{ secrets.SSH_PORT }}
              run: |
                # SSH-Verzeichnis und Schlüssel sicher einrichten
                mkdir -p ~/.ssh
                echo "$SSH_PRIVATE_KEY" > ~/.ssh/id_rsa
                chmod 600 ~/.ssh/id_rsa
                echo "Host deployment-target
                  HostName $SSH_HOST
                  User ${{ secrets.SSH_USER }}
                  Port $SSH_PORT
                  StrictHostKeyChecking no
                  IdentityFile ~/.ssh/id_rsa" > ~/.ssh/config

            - name: Test SSH connection
              run: ssh deployment-target "echo 'SSH connection successful'"

            - name: Deploy to VPS with rsync
              run: |
                rsync -avz --delete \
                  --exclude="node_modules" \
                  --exclude=".git" \
                  --exclude=".github" \
                  --exclude=".env*" \
                  ./ deployment-target:/home/Apps/Webapps/LeshMe/

            - name: Setup application on server
              run: |
                ssh deployment-target << EOF
                  cd /home/Apps/Webapps/LeshMe
                  npm ci --production
                  
                  # Prüfen, ob der Prozess existiert und entsprechend handeln
                  if pm2 list | grep -q "LeshMe"; then
                    echo "Process exists - Reloading"
                    pm2 reload LeshMe || pm2 restart LeshMe
                  else
                    echo "Process does not exist - starting"
                    pm2 start npm --name "LeshMe" -- start
                  fi
                  
                  pm2 save
                EOF

            - name: Verify deployment
              run: |
                echo "Verifying deployment..."
                # Hier könnten Sie einen Health-Check einfügen
                ssh deployment-target "pm2 status LeshMe"

            - name: Deployment notification
              if: always()
              run: |
                if [ ${{ job.status }} == "success" ]; then
                  echo "Deployment erfolgreich abgeschlossen"
                else
                  echo "Deployment fehlgeschlagen"
                fi
